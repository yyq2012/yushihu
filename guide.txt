创建版本库:
	$ mkdir learngit
	$ cd learngit
	$ pwd
	--初始化(将该目录变成git可以管理的库)
	$ git init
	(查看隐藏目录)
		$ ls -ah
添加文件
	$ git add readme.txt
提交文件
	$ git commit -m "wrote a readme.txt"
	(没有消息就是好消息)
查看结果:
	$ git status
查看具体修改结果:
	$ git diff readme.txt
	(添加然后提交)
查看提交记录:
	$ git log
	如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数
	$ git log --pretty=oneline
回退到上一个版本:
	$ git reset --hard HEAD^
	(在Git中，用HEAD表示当前版本，也就是最新的提交1094adb...（注意我的提交ID和你的肯定不一样），上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100)
查看版本号:
	$ git reflog

	git中有一个暂存区的概念.add添加是指将文件先存于暂存区.commit后再从暂存区保存到工作区中.
Git跟踪并管理的是修改，而非文件
	不add的修改,是提交不了的
撤销修改:(提交之前,add之后)
	$ git checkout --readme.txt
	场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

	场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。

	场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库